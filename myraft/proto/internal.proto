package proto;

// Define internal RPC message formats

// next tag: 5
message VoteRequest {
    required uint64 term = 1;
    required string candidateId = 2;
    required uint64 lastLogIndex = 3;
    required uint64 lastLogTerm = 4;
}

// next tag: 3
message VoteReply {
    required uint64 currentTerm = 1;
    required bool granted = 2;
}

message AppendRequest {
    required uint64 term = 1;
    required string leaderId = 2;
    required uint64 prevLogIndex = 3;
    required uint64 prevLogTerm = 4;
    required uint64 commitIndex = 5; // leader's commit index
    repeated Log logs = 6;
}

message AppendReply {
    required uint64 term = 1;
    required bool success = 2;
}

// next tag: 7
message Log {
    required uint64 logId = 1;
    required uint64 term = 2;
    repeated string records = 3;
    repeated int32 readSet = 4;
    repeated int32 writeSet = 5;
    required uint32 checksum = 6; // crc32 checksum for the log
}
