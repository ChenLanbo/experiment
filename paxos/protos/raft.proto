package protos;

message VoteRequest {
    required uint64 term = 1;
    required string candidateId = 2;
    required uint64 lastLogTerm = 3;
    required uint64 lastLogIndex = 4;
}

message VoteReply {
    required bool granted = 1;
    required uint64 term = 2;
}

message AppendRequest {
    required uint64 term = 1;
    required string leaderId = 2;
    required uint64 prevLogTerm = 3;
    required uint64 prevLogIndex = 4;
    required uint64 commitIndex = 5;
    repeated Log logs = 6;
}

message AppendReply {
    required bool success = 1;
    required uint64 term = 2;
}

message Log {
    required uint64 term = 1;
    required uint64 logId = 2;
}

// Public APIs
message PutRequest {
    required string key = 1;
    required bytes  value = 2;
}

message PutReply {
    required bool success = 1;
    optional string leaderId = 2;
}

service Raft {

    // Vote request
    rpc Vote(VoteRequest) returns (VoteReply) {}

    // Append request
    rpc Append(AppendRequest) returns (AppendReply) {}

    // Public APIs
    rpc Put(PutRequest) returns (PutReply) {}
}